{"version":3,"file":"settings.min.js","sources":["../src/settings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Settings page JavaScript\r\n *\r\n * @module     mod_intebchat/settings\r\n * @copyright  2025 Alonso Arias <soporte@ingeweb.co>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['jquery', 'core/ajax', 'core/notification'], function($, Ajax, Notification) {\r\n    var init = function() {\r\n        // Handle global settings API type change\r\n        $('#id_s_mod_intebchat_type').on('change', function(e) {\r\n            // If the API Type is changed, programmatically hit save so the page automatically reloads with the new options\r\n            $('.settingsform').addClass('mod_intebchat');\r\n            $('.settingsform').addClass('disabled');\r\n            $('.settingsform button[type=\"submit\"]').click();\r\n        });\r\n\r\n        // Handle instance form API key change for assistant list update\r\n        var $apikeyField = $('#id_apikey');\r\n        var $assistantSelect = $('#id_assistant');\r\n        var $apitypeSelect = $('#id_apitype');\r\n        \r\n        if ($apikeyField.length && $assistantSelect.length) {\r\n            var updateAssistantList = function() {\r\n                var apikey = $apikeyField.val();\r\n                var apitype = $apitypeSelect.val() || $apitypeSelect.find('input[type=\"hidden\"]').val();\r\n                \r\n                if (apikey && apitype === 'assistant') {\r\n                    // Show loading indicator\r\n                    $assistantSelect.prop('disabled', true);\r\n                    \r\n                    Ajax.call([{\r\n                        methodname: 'mod_intebchat_get_assistants',\r\n                        args: {apikey: apikey},\r\n                        done: function(response) {\r\n                            // Clear current options\r\n                            $assistantSelect.empty();\r\n                            \r\n                            if (response.assistants && response.assistants.length > 0) {\r\n                                $.each(response.assistants, function(index, assistant) {\r\n                                    $assistantSelect.append(\r\n                                        $('<option></option>')\r\n                                            .attr('value', assistant.id)\r\n                                            .text(assistant.name)\r\n                                    );\r\n                                });\r\n                            } else {\r\n                                $assistantSelect.append(\r\n                                    $('<option></option>')\r\n                                        .attr('value', '')\r\n                                        .text('No assistants found')\r\n                                );\r\n                            }\r\n                            \r\n                            $assistantSelect.prop('disabled', false);\r\n                        },\r\n                        fail: function(error) {\r\n                            Notification.addNotification({\r\n                                message: 'Failed to fetch assistants: ' + error.message,\r\n                                type: 'error'\r\n                            });\r\n                            $assistantSelect.prop('disabled', false);\r\n                        }\r\n                    }]);\r\n                }\r\n            };\r\n            \r\n            // Update assistants when API key changes\r\n            $apikeyField.on('blur', updateAssistantList);\r\n            \r\n            // Update visibility when API type changes\r\n            $apitypeSelect.on('change', function() {\r\n                if ($(this).val() === 'assistant') {\r\n                    updateAssistantList();\r\n                }\r\n            });\r\n        }\r\n\r\n        // Handle form validation for API-specific fields\r\n        $('form.mform').on('submit', function(e) {\r\n            var apitype = $('#id_apitype').val() || $('#id_apitype').find('input[type=\"hidden\"]').val();\r\n            var hasErrors = false;\r\n            \r\n            // Validate Azure fields if Azure is selected\r\n            if (apitype === 'azure') {\r\n                if (!$('#id_resourcename').val()) {\r\n                    $('#id_error_resourcename').text('Required').show();\r\n                    hasErrors = true;\r\n                }\r\n                if (!$('#id_deploymentid').val()) {\r\n                    $('#id_error_deploymentid').text('Required').show();\r\n                    hasErrors = true;\r\n                }\r\n            }\r\n            \r\n            if (hasErrors) {\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n        });\r\n\r\n        // Alert when a reasoning model is selected\r\n        var $modelSelect = $('#id_model');\r\n        if ($modelSelect.length) {\r\n            // Check initial value\r\n            var checkReasoningModel = function(val) {\r\n                if (val && (val.includes('o1') || val.includes('o3'))) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n\r\n            // Function to show reasoning model alert\r\n            var showReasoningModelAlert = function(modelName) {\r\n                Notification.addNotification({\r\n                    message: 'Has seleccionado el modelo \"' + modelName + '\". Este es un modelo de razonamiento avanzado dise침ado para resolver problemas complejos mediante un an치lisis paso a paso. Ten en cuenta que puede tener un mayor costo y tiempo de respuesta.',\r\n                    type: 'info'\r\n                });\r\n            };\r\n\r\n            // Check on change\r\n            $modelSelect.on('change', function() {\r\n                var val = $(this).val();\r\n                if (checkReasoningModel(val)) {\r\n                    showReasoningModelAlert(val);\r\n                }\r\n            });\r\n\r\n            // Also check on initial load if editing\r\n            var initialVal = $modelSelect.val();\r\n            if (initialVal && checkReasoningModel(initialVal)) {\r\n                // Don't show alert on initial load, just be ready for changes\r\n            }\r\n        }\r\n\r\n        // Also handle for global settings model select\r\n        var $globalModelSelect = $('#id_s_mod_intebchat_model');\r\n        if ($globalModelSelect.length) {\r\n            $globalModelSelect.on('change', function() {\r\n                var val = $(this).val();\r\n                if (val && (val.includes('o1') || val.includes('o3'))) {\r\n                    Notification.addNotification({\r\n                        message: 'Has seleccionado el modelo \"' + val + '\". Este es un modelo de razonamiento avanzado dise침ado para resolver problemas complejos mediante un an치lisis paso a paso. Ten en cuenta que puede tener un mayor costo y tiempo de respuesta.',\r\n                        type: 'info'\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        init: init\r\n    };\r\n});"],"names":["define","$","Ajax","Notification","init","on","e","addClass","click","$apikeyField","$assistantSelect","$apitypeSelect","length","updateAssistantList","apikey","val","apitype","find","prop","call","methodname","args","done","response","empty","assistants","each","index","assistant","append","attr","id","text","name","fail","error","addNotification","message","type","this","hasErrors","show","preventDefault","$modelSelect","checkReasoningModel","includes","modelName","initialVal","$globalModelSelect"],"mappings":";;;;;;;AAuBAA,gCAAO,CAAC,SAAU,YAAa,sBAAsB,SAASC,EAAGC,KAAMC,oBA+I5D,CACHC,KA/IO,WAEPH,EAAE,4BAA4BI,GAAG,UAAU,SAASC,GAEhDL,EAAE,iBAAiBM,SAAS,iBAC5BN,EAAE,iBAAiBM,SAAS,YAC5BN,EAAE,uCAAuCO,eAIzCC,aAAeR,EAAE,cACjBS,iBAAmBT,EAAE,iBACrBU,eAAiBV,EAAE,kBAEnBQ,aAAaG,QAAUF,iBAAiBE,OAAQ,KAC5CC,oBAAsB,eAClBC,OAASL,aAAaM,MACtBC,QAAUL,eAAeI,OAASJ,eAAeM,KAAK,wBAAwBF,MAE9ED,QAAsB,cAAZE,UAEVN,iBAAiBQ,KAAK,YAAY,GAElChB,KAAKiB,KAAK,CAAC,CACPC,WAAY,+BACZC,KAAM,CAACP,OAAQA,QACfQ,KAAM,SAASC,UAEXb,iBAAiBc,QAEbD,SAASE,YAAcF,SAASE,WAAWb,OAAS,EACpDX,EAAEyB,KAAKH,SAASE,YAAY,SAASE,MAAOC,WACxClB,iBAAiBmB,OACb5B,EAAE,qBACG6B,KAAK,QAASF,UAAUG,IACxBC,KAAKJ,UAAUK,UAI5BvB,iBAAiBmB,OACb5B,EAAE,qBACG6B,KAAK,QAAS,IACdE,KAAK,wBAIlBtB,iBAAiBQ,KAAK,YAAY,IAEtCgB,KAAM,SAASC,OACXhC,aAAaiC,gBAAgB,CACzBC,QAAS,+BAAiCF,MAAME,QAChDC,KAAM,UAEV5B,iBAAiBQ,KAAK,YAAY,SAOlDT,aAAaJ,GAAG,OAAQQ,qBAGxBF,eAAeN,GAAG,UAAU,WACF,cAAlBJ,EAAEsC,MAAMxB,OACRF,yBAMZZ,EAAE,cAAcI,GAAG,UAAU,SAASC,OAE9BkC,WAAY,KAGA,WAJFvC,EAAE,eAAec,OAASd,EAAE,eAAegB,KAAK,wBAAwBF,SAK7Ed,EAAE,oBAAoBc,QACvBd,EAAE,0BAA0B+B,KAAK,YAAYS,OAC7CD,WAAY,GAEXvC,EAAE,oBAAoBc,QACvBd,EAAE,0BAA0B+B,KAAK,YAAYS,OAC7CD,WAAY,IAIhBA,iBACAlC,EAAEoC,kBACK,SAKXC,aAAe1C,EAAE,gBACjB0C,aAAa/B,OAAQ,KAEjBgC,oBAAsB,SAAS7B,cAC3BA,MAAQA,IAAI8B,SAAS,QAAS9B,IAAI8B,SAAS,QAenDF,aAAatC,GAAG,UAAU,eARayC,UAS/B/B,IAAMd,EAAEsC,MAAMxB,MACd6B,oBAAoB7B,OAVW+B,UAWP/B,IAV5BZ,aAAaiC,gBAAgB,CACzBC,QAAS,+BAAiCS,UAAY,iMACtDR,KAAM,iBAaVS,WAAaJ,aAAa5B,MAC1BgC,YAAcH,oBAAoBG,gBAMtCC,mBAAqB/C,EAAE,6BACvB+C,mBAAmBpC,QACnBoC,mBAAmB3C,GAAG,UAAU,eACxBU,IAAMd,EAAEsC,MAAMxB,MACdA,MAAQA,IAAI8B,SAAS,OAAS9B,IAAI8B,SAAS,QAC3C1C,aAAaiC,gBAAgB,CACzBC,QAAS,+BAAiCtB,IAAM,iMAChDuB,KAAM"}