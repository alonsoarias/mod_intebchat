{"version":3,"file":"lib.min.js","sources":["../src/lib.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Main JavaScript for INTEB Chat module\r\n *\r\n * @module     mod_intebchat/lib\r\n * @copyright  2025 Alonso Arias <soporte@ingeweb.co>\r\n * @copyright  Based on work by 2022 Bryce Yoder <me@bryceyoder.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['jquery', 'core/ajax', 'core/str', 'core/notification'], function($, Ajax, Str, Notification) {\r\n    var questionString = 'Ask a question...';\r\n    var errorString = 'An error occurred! Please try again later.';\r\n    var chatData = {};\r\n\r\n    /**\r\n     * Initialize the module\r\n     * @param {Object} data Configuration data\r\n     */\r\n    var init = function(data) {\r\n        var instanceId = data.instanceId;\r\n        var api_type = data.api_type;\r\n        var persistConvo = data.persistConvo;\r\n\r\n        // Initialize local data storage if necessary\r\n        if (api_type === 'assistant') {\r\n            chatData = localStorage.getItem(\"mod_intebchat_data\");\r\n            if (chatData) {\r\n                chatData = JSON.parse(chatData);\r\n                if (chatData[instanceId] && chatData[instanceId]['threadId'] && persistConvo === \"1\") {\r\n                    $.ajax({\r\n                        url: M.cfg.wwwroot + '/mod/intebchat/api/thread.php?thread_id=' + chatData[instanceId]['threadId'],\r\n                        type: 'GET',\r\n                        dataType: 'json',\r\n                        success: function(data) {\r\n                            for (var i = 0; i < data.length; i++) {\r\n                                addToChatLog(data[i].role === 'user' ? 'user' : 'bot', data[i].message, instanceId);\r\n                            }\r\n                        },\r\n                        error: function() {\r\n                            // Reset thread if error\r\n                            chatData[instanceId] = {};\r\n                            localStorage.setItem(\"mod_intebchat_data\", JSON.stringify(chatData));\r\n                        }\r\n                    });\r\n                } else {\r\n                    chatData[instanceId] = {};\r\n                }\r\n            } else {\r\n                chatData = {[instanceId]: {}};\r\n            }\r\n            localStorage.setItem(\"mod_intebchat_data\", JSON.stringify(chatData));\r\n        }\r\n\r\n        // Event listeners\r\n        $(document).on('keyup', '.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input', function(e) {\r\n            if (e.which === 13 && e.target.value !== \"\") {\r\n                addToChatLog('user', e.target.value, instanceId);\r\n                createCompletion(e.target.value, instanceId, api_type);\r\n                e.target.value = '';\r\n            }\r\n        });\r\n\r\n        $(document).on('click', '.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #go', function(e) {\r\n            var input = $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input');\r\n            if (input.val() !== \"\") {\r\n                addToChatLog('user', input.val(), instanceId);\r\n                createCompletion(input.val(), instanceId, api_type);\r\n                input.val('');\r\n            }\r\n        });\r\n\r\n        $(document).on('click', '.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #refresh', function(e) {\r\n            clearHistory(instanceId);\r\n        });\r\n\r\n        // Load strings\r\n        var strings = [\r\n            {\r\n                key: 'askaquestion',\r\n                component: 'mod_intebchat'\r\n            },\r\n            {\r\n                key: 'erroroccurred',\r\n                component: 'mod_intebchat'\r\n            },\r\n        ];\r\n        Str.get_strings(strings).then(function(results) {\r\n            questionString = results[0];\r\n            errorString = results[1];\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Add a message to the chat UI\r\n     * @param {string} type Which side of the UI the message should be on. Can be \"user\" or \"bot\"\r\n     * @param {string} message The text of the message to add\r\n     * @param {int} instanceId The ID of the instance to manipulate\r\n     */\r\n    var addToChatLog = function(type, message, instanceId) {\r\n        var messageContainer = $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #intebchat_log');\r\n        \r\n        var messageElem = $('<div></div>').addClass('openai_message').addClass(type);\r\n        var messageText = $('<span></span>').html(message);\r\n        messageElem.append(messageText);\r\n\r\n        messageContainer.append(messageElem);\r\n        \r\n        if (messageText.width()) {\r\n            messageElem.css('width', (messageText.width() + 40) + \"px\");\r\n        }\r\n        \r\n        messageContainer.scrollTop(messageContainer[0].scrollHeight);\r\n    };\r\n\r\n    /**\r\n     * Clears the thread ID from local storage and removes the messages from the UI\r\n     * @param {int} instanceId\r\n     */\r\n    var clearHistory = function(instanceId) {\r\n        chatData = localStorage.getItem(\"mod_intebchat_data\");\r\n        if (chatData) {\r\n            chatData = JSON.parse(chatData);\r\n            if (chatData[instanceId]) {\r\n                chatData[instanceId] = {};\r\n                localStorage.setItem(\"mod_intebchat_data\", JSON.stringify(chatData));\r\n            }\r\n        }\r\n        $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #intebchat_log').html(\"\");\r\n    };\r\n\r\n    /**\r\n     * Makes an API request to get a completion from GPT\r\n     * @param {string} message The text to get a completion for\r\n     * @param {int} instanceId The ID of the instance\r\n     * @param {string} api_type \"assistant\" | \"chat\" The type of API to use\r\n     */\r\n    var createCompletion = function(message, instanceId, api_type) {\r\n        var threadId = null;\r\n        \r\n        // If the type is assistant, attempt to fetch a thread ID\r\n        if (api_type === 'assistant') {\r\n            chatData = localStorage.getItem(\"mod_intebchat_data\");\r\n            if (chatData) {\r\n                chatData = JSON.parse(chatData);\r\n                if (chatData[instanceId]) {\r\n                    threadId = chatData[instanceId]['threadId'] || null;\r\n                }\r\n            } else {\r\n                chatData = {[instanceId]: {}};\r\n            }\r\n        }  \r\n\r\n        var history = buildTranscript(instanceId);\r\n\r\n        $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #control_bar').addClass('disabled');\r\n        $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').removeClass('error');\r\n        $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').attr('placeholder', questionString);\r\n        $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').blur();\r\n        addToChatLog('bot loading', '...', instanceId);\r\n\r\n        $.ajax({\r\n            url: M.cfg.wwwroot + '/mod/intebchat/api/completion.php',\r\n            type: 'POST',\r\n            dataType: 'json',\r\n            contentType: 'application/json',\r\n            data: JSON.stringify({\r\n                message: message,\r\n                history: history,\r\n                instanceId: instanceId,\r\n                threadId: threadId\r\n            }),\r\n            success: function(data) {\r\n                var messageContainer = $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #intebchat_log');\r\n                messageContainer.children().last().remove();\r\n                $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #control_bar').removeClass('disabled');\r\n\r\n                if (data.message) {\r\n                    addToChatLog('bot', data.message, instanceId);\r\n                    if (data.thread_id) {\r\n                        chatData[instanceId]['threadId'] = data.thread_id;\r\n                        localStorage.setItem(\"mod_intebchat_data\", JSON.stringify(chatData));\r\n                    }\r\n                } else if (data.error) {\r\n                    addToChatLog('bot', data.error.message, instanceId);\r\n                }\r\n                $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').focus();\r\n            },\r\n            error: function(xhr, status, error) {\r\n                var messageContainer = $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #intebchat_log');\r\n                messageContainer.children().last().remove();\r\n                $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #control_bar').removeClass('disabled');\r\n                $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').addClass('error');\r\n                $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').attr('placeholder', errorString);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Using the existing messages in the chat history, create a string that can be used to aid completion\r\n     * @param {int} instanceId The instance from which to build the history\r\n     * @return {Array} A transcript of the conversation up to this point\r\n     */\r\n    var buildTranscript = function(instanceId) {\r\n        var transcript = [];\r\n        $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] .openai_message').each(function(index, element) {\r\n            var messages = $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] .openai_message');\r\n            if (index === messages.length - 1) {\r\n                return;\r\n            }\r\n\r\n            var user = userName;\r\n            if ($(element).hasClass('bot')) {\r\n                user = assistantName;\r\n            }\r\n            transcript.push({\"user\": user, \"message\": $(element).text()});\r\n        });\r\n\r\n        return transcript;\r\n    };\r\n\r\n    return {\r\n        init: init\r\n    };\r\n});"],"names":["define","$","Ajax","Str","Notification","questionString","errorString","chatData","addToChatLog","type","message","instanceId","messageContainer","messageElem","addClass","messageText","html","append","width","css","scrollTop","scrollHeight","clearHistory","localStorage","getItem","JSON","parse","setItem","stringify","createCompletion","api_type","threadId","history","buildTranscript","removeClass","attr","blur","ajax","url","M","cfg","wwwroot","dataType","contentType","data","success","children","last","remove","thread_id","error","focus","xhr","status","transcript","each","index","element","length","user","userName","hasClass","assistantName","push","text","init","persistConvo","i","role","document","on","e","which","target","value","input","val","get_strings","key","component","then","results"],"mappings":"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"}